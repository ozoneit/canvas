<% 
  @active_tab = 'settings'
  jammit_js :graphael
  jammit_css :statistics
  add_crumb "Statistics"
 %>

<% content_for :page_title do %><%= @context.class.to_s %> Statistics: <%= @context.name %><% end %>

<div style="padding: 0 20px;" id="stats">
<h2>Statistics for <%= @context.name %></h2>

<% active_students = @context.participating_students.enrolled_before(@range_end).length %>
<% inactive_students = @context.student_enrollments.before(@range_end).select{|e| e.invited? }.length %>

<% total_topics = @context.discussion_topics.active.before(@range_end).count %>
<% total_entries = DiscussionEntry.active.scoped(:conditions => {:discussion_topic_id => @context.discussion_topics.active.before(@range_end).map(&:id)}).count %>
<% new_topics = @context.discussion_topics.active.before(@range_end).select{|t| t.created_at > @range_start}.length %>
<% new_entries = DiscussionEntry.active.after(@range_start).scoped(:conditions => {:discussion_topic_id => @context.discussion_topics.active.before(@range_end).map(&:id)}).count %>
<% new_assignments = @context.assignments.active.before(@range_end).select{|a| a.expects_submission? && a.created_at > @range_start }.length %>
<% new_submissions = @context.submissions.before(@range_end).having_submission.scoped(:conditions => ['submitted_at > ?', @range_start]).count %>
<% total_assignments = @context.assignments.active.before(@range_end).select{|a| a.expects_submission? }.length %>
<% total_submissions = @context.submissions.before(@range_end).having_submission.count %>

<%
  rubric_associations = @context.rubric_associations.bookmarked.before(@range_end)
  rubric_associations = rubric_associations.select(&:rubric_id).once_per(&:rubric_id)
%>
<div id="reports-tabs">
  <ul>
    <li><a href="#tab-totals">Totals</a></li>
    <li><a href="#tab-assignments">Assignments</a></li>
    <li><a href="#tab-students">Students</a></li>
    <li><a href="#tab-files">File Storage</a></li>
  </ul>
  <div class="stats" id="tab-totals">
    <h3>Running Totals</h3>
    <table>
      <tr>
        <td>Discussions</td>
        <td><%= total_topics %></td>
      </tr><tr>
        <td class="indent">Discussion Posts</td>
        <td class="indent"><%= total_entries %></td>
      </tr><tr>
        <td class="indent">New Discussions</td>
        <td class="indent"><%= new_topics %></td>
      </tr><tr>
        <td class="indent">New Discussion Entries</td>
        <td class="indent"><%= new_entries %></td>
          </tr><tr>
        <td>Assignments</td>
        <td><%= @context.assignments.active.before(@range_end).count %></td>
      </tr><tr>
        <td class="indent">Assignment Groups</td>
        <td class="indent"><%= @context.assignment_groups.active.before(@range_end).count %></td>
      </tr><tr>
        <td class="indent">Course Rubrics</td>
        <td class="indent"><%= rubric_associations.count %></td>
      </tr><tr>
        <td class="indent">All Rubrics</td>
        <td class="indent"><%= @context.rubrics.active.count %></td>
      </tr><tr>
        <td>Active Students</td>
        <td><%= active_students %></td>
      </tr><tr>
        <td class="indent">Unaccepted Students</td>
        <td class="indent"><%= inactive_students %></td>
      </tr><tr>
        <td>Quizzes</td>
        <td><%= @context.quizzes.count %></td>
      </tr><tr>
        <td class="indent">Quiz Questions</td>
        <td class="indent"><%= @context.quizzes.before(@range_end).map{|q| (q.quiz_data || []).length}.sum %></td>
      </tr><tr>
        <td class="indent">Quiz Submissions</td>
        <td class="indent"><%= QuizSubmission.scoped(:conditions => {:quiz_id => @context.quizzes.before(@range_end).map(&:id)}).count %></td>
      </tr>
    </table>
  </div>
  <div class="stats" id="tab-assignments">
    <h3>Assignments Usage Report</h3>
    <table>
      <thead><tr>
        <th>Submission Type</th>
        <th># Assignments</th>
        <th># Submissions</th>
      </tr>
      </thead>
      <tfoot>
      <tr>
        <th>New</th>
        <th><%= new_assignments %></th>
        <th><%= new_submissions %></th>
      </tr><tr>
        <th>Any</th>
        <th><%= total_assignments %></th>
        <th><%= total_submissions %></th>
      </tr></tfoot>
      <tbody>
      <tr>
        <td>File Upload</td>
        <td><%= @context.assignments.active.before(@range_end).select{|a| a.submission_types.match(/online_upload/) }.length %></td>
        <td><%= @context.submissions.before(@range_end).scoped(:conditions => {:submission_type => 'online_upload' }).count %></td>
      </tr><tr>
        <td>Text Entry</td>
        <td><%= @context.assignments.active.before(@range_end).select{|a| a.submission_types.match(/online_text_entry/) }.length %></td>
        <td><%= @context.submissions.before(@range_end).scoped(:conditions => {:submission_type => 'online_text_entry' }).count %></td>
      </tr><tr>
        <td>Website URL</td>
        <td><%= @context.assignments.active.before(@range_end).select{|a| a.submission_types.match(/online_url/) }.length %></td>
        <td><%= @context.submissions.before(@range_end).scoped(:conditions => {:submission_type => 'online_url' }).count %></td>
      </tr><tr>
        <td>Quiz</td>
        <td><%= @context.assignments.active.before(@range_end).select{|a| a.submission_types.match(/online_quiz/) }.length %></td>
        <td><%= @context.submissions.before(@range_end).scoped(:conditions => {:submission_type => 'online_quiz' }).count %></td>
      </tr><tr>
        <td>Discussion Topic</td>
        <td><%= @context.assignments.active.before(@range_end).select{|a| a.submission_types.match(/discussion_topic/) }.length %></td>
        <td><%= @context.submissions.before(@range_end).scoped(:conditions => {:submission_type => 'discussion_topic' }).count %></td>
      </tr>
      </tbody>
    </table>
  </div>
  <div id="tab-students">
    <h3>Recently Logged-In Users</h3>
    <ul class="item_list">
      <% @recently_logged_students.each do |user| %>
        <li>
          <a href="<%= user_path(user.id) %>" class="header"><%= user.name %></a>
          <div class="sub_header">last logged in <%= datetime_string(user.pseudonyms.map{|p| [p.current_login_at, p.last_login_at]}.flatten.compact.max) %></div>
        </li>
      <% end %>
      <% if @recently_logged_students.empty? %>
        <li>None to show</li>
      <% end %>
    </ul>
  </div>
  <div class="stats" id="tab-files">
    <h3>File Storage</h3>
    <table>
      <tr>
        <td>Allotted Storage:</td>
        <td style="padding-left: 10px; text-align: right;"><%= number_to_human_size(@context.quota.megabytes) %></td>
        <td></td>
      </tr>
      <tr>
        <td>Uploaded Files:</td>
        <td style="padding-left: 10px; text-align: right;"><%= number_to_human_size(@files_size) %></td>
        <td style="padding-left: 10px; text-align: right;"><%= pluralize(number_with_delimiter(@file_count), 'file') %></td>
      </tr>
      <tr>
        <td>Media Files:</td>
        <td style="padding-left: 10px; text-align: right;"><%= number_to_human_size(@media_files_size) %></td>
        <td style="padding-left: 10px; text-align: right;"><%= pluralize(number_with_delimiter(@media_file_count), 'file') %></td>
      </tr>
    </table>
  </div>
</div>
<% if page_views_enabled? -%>
<h3 class='h-margin-top'>Page views over time</h3>
<div id='page_views_by_day' style='width: 600px; height: 240px;'></div>

<% js_block do %>
  <!--Load the GOOGLE AJAX API-->
  <script type="text/javascript" src="http://www.google.com/jsapi"></script>

  <script type="text/javascript">
    var pageViewData = <%= raw @context.page_view_data(:dates => [1.month.ago, 1.second.ago]).to_json %>;
    google.load('visualization', '1', {'packages':['annotatedtimeline']});
    google.setOnLoadCallback(function(){
      var data = new google.visualization.DataTable();
      data.addColumn('date', 'Date');
      data.addColumn('number', 'Page Views');
      data.addColumn('string', 'title1');
      data.addColumn('string', 'text1');
      
      var rows = []
      $.each(pageViewData, function() {
        var date = new Date();
        date.setTime(this[0]);
        rows.push(
          //this ends up being [(a date), (the number of pageViews on that date), "an annotation tile, (if any)", ""]
          [date, this[1], undefined, undefined]
        )
      });
      
      data.addRows(rows);

      var chart = new google.visualization.AnnotatedTimeLine(document.getElementById('page_views_by_day'));
      chart.draw(data, {displayAnnotations: false});
      
    });
  </script>
<% end -%>
<% end -%>

<% js_block do -%>
  <script>
  $(document).ready(function() {
    $("#reports-tabs").tabs().show();
  });
  </script>
<% end %>
